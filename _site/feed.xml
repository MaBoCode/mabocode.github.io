<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.8.6">Jekyll</generator><link href="https://mabocode.github.io/feed.xml" rel="self" type="application/atom+xml" /><link href="https://mabocode.github.io/" rel="alternate" type="text/html" /><updated>2019-10-29T22:14:12+01:00</updated><id>https://mabocode.github.io/feed.xml</id><title type="html">Matthias’ Blog</title><subtitle>Hey ! I'm Matthias, a passionate computer science student.  If you're eager to learn about Programming, Computer Security and much more, read my stories. So, this is what I learned today...</subtitle><entry><title type="html">OverTheWire: Natas - Level 4 to 5</title><link href="https://mabocode.github.io/posts/overthewire/natas/otw-natas-4" rel="alternate" type="text/html" title="OverTheWire: Natas - Level 4 to 5" /><published>2019-07-01T12:28:22+02:00</published><updated>2019-07-01T12:28:22+02:00</updated><id>https://mabocode.github.io/posts/overthewire/natas/otw-natas-4</id><content type="html" xml:base="https://mabocode.github.io/posts/overthewire/natas/otw-natas-4">Continuing with [OverTheWire's Natas](http://overthewire.org/wargames/natas/) wargame, level 4 to 5.&lt;!--more--&gt;

On this level we can't get the password because we're coming from the wrong webpage.

To know what they're talking about we need to know how an HTTP request is made and what it contains.

An HTTP request occurs when a client wants to communicate with a server. It contains: a *request line*, *header fields*, an *empty line* and an optional *message body*.

The request line (first line of the request) often looks like this: `GET /path-from-root HTTP/1.1` . Where *GET* is the [method](https://developer.mozilla.org/en-US/docs/Web/HTTP/Methods) used to perform the request.
The header fields can be: *Host*, *User-Agent*, *Accept*, *Cookie*, *Referer*, etc...

In the HTTP/1.1 protocol standards, only the Host field is required, all the others are optional. You can get all header field definitions [here](https://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html).

With the HTTP referer specified, the new webpage knows where the request originated from.

In this case we need to set the value of the HTTP referer field. To do that we can either use an extension in our web browser to modify the referer of the request or use a very well known tool for pentesting called BurpSuite. 

## With Referer Control

Set the site filter to natas4 url and choose Custom for the setting with natas5 url.
Don't forget to set the status to 'Active'.

Once that's done, reload natas4 webpage. We get an 'Access granted' with the password !


## With BurpSuite

Make sure you configure your browser proxy settings right (you can use [FoxyProxy](https://getfoxyproxy.org/) extension to set proxies) and that Burpsuite is listening on 127.0.0.1:8080. See how to configure Burpsuite for Firefox [here](https://support.portswigger.net/customer/portal/articles/1783066-configuring-firefox-to-work-with-burp) and for Chrome [here](https://support.portswigger.net/customer/portal/articles/1783065-configuring-chrome-to-work-with-burp).

Burpsuite allows us to intercept the request, so under the *Proxy* tab and the *Intercept* tab we can click on *Intercept is off* to start catching the request. Reload natas4 webpage (with FoxyProfy active), go back to Burp and you can see the HTTP request under the *Raw* tab.

Now we need to send the request to the *Repeater* with which we can modify and send the request multiple times. To do that click on *Action* and *Send to Repeater* or hit *Ctrl + R*. Before going to the Repeater tab, turn off the intercepter.

On the *Repeater* tab add the following line at the end of your request: `Referer: http://natas5.natas.labs.overthewire.org/`.
Then click on *Send*. You get the HTTP response on the right panel with the password for the next level !

When doing penetration testing I use the *Repeater* all the time, very useful feature.

So that's it for level 4 guys, **keep hacking and have a great day !**

{% highlight c linenos%}

{% endhighlight  %}</content><author><name></name></author><summary type="html">Continuing with OverTheWire’s Natas wargame, level 4 to 5.</summary></entry><entry><title type="html">OverTheWire: Natas - Level 3 to 4</title><link href="https://mabocode.github.io/posts/overthewire/natas/otw-natas-3" rel="alternate" type="text/html" title="OverTheWire: Natas - Level 3 to 4" /><published>2019-07-01T11:00:55+02:00</published><updated>2019-07-01T11:00:55+02:00</updated><id>https://mabocode.github.io/posts/overthewire/natas/otw-natas-3</id><content type="html" xml:base="https://mabocode.github.io/posts/overthewire/natas/otw-natas-3">Continuing with [OverTheWire's Natas](http://overthewire.org/wargames/natas/) wargame, level 3 to 4.&lt;!--more--&gt;

There's something new to learn this time about web development. Web site owners can choose to add a `/robots.txt` file in their site. This file is used to give instructions to web robots. 

You can visit [this site](https://www.robotstxt.org/robotstxt.html) to get more information about it.

The `robots.txt` file informs us that there's a `/s3cr3t` directory. Visiting it we see a `users.txt` as in the previous level where we can find the password for level 4 !

That's it for level 3, **keep hacking and have a great day !**

{% highlight c linenos%}

{% endhighlight  %}</content><author><name></name></author><summary type="html">Continuing with OverTheWire’s Natas wargame, level 3 to 4.</summary></entry><entry><title type="html">OverTheWire: Natas - Level 2 to 3</title><link href="https://mabocode.github.io/posts/overthewire/natas/otw-natas-2" rel="alternate" type="text/html" title="OverTheWire: Natas - Level 2 to 3" /><published>2019-07-01T10:22:00+02:00</published><updated>2019-07-01T10:22:00+02:00</updated><id>https://mabocode.github.io/posts/overthewire/natas/otw-natas-2</id><content type="html" xml:base="https://mabocode.github.io/posts/overthewire/natas/otw-natas-2">Hi everyone !&lt;br&gt;
Let's keep going with [OverTheWire's Natas](http://overthewire.org/wargames/natas/) wargame.  &lt;!--more--&gt;

Inspecting the source code of [natas2.natas.labs.overthewire.org](http://natas2.natas.labs.overthewire.org) we find an image tag with the source attribute of value `/files/pixel.png`. So there's a `/files` directory at the root of the website.

Visiting `/files`, we get an interesting file called `users.txt` which contains the password for level 3.

That's it for this level, **keep hacking and have a great day !**

{% highlight c linenos%}

{% endhighlight  %}</content><author><name></name></author><summary type="html">Hi everyone ! Let’s keep going with OverTheWire’s Natas wargame.</summary></entry><entry><title type="html">OverTheWire: Natas - Level 1 to 2</title><link href="https://mabocode.github.io/posts/overthewire/natas/otw-natas-1" rel="alternate" type="text/html" title="OverTheWire: Natas - Level 1 to 2" /><published>2019-07-01T09:40:00+02:00</published><updated>2019-07-01T09:40:00+02:00</updated><id>https://mabocode.github.io/posts/overthewire/natas/otw-natas-1</id><content type="html" xml:base="https://mabocode.github.io/posts/overthewire/natas/otw-natas-1">Continuing [OverTheWire Natas](http://overthewire.org/wargames/natas/){:target=&quot;_blank&quot;} wargame.&lt;!--more--&gt; Let's go to [natas1.natas.labs.overthewire.org](http://natas1.natas.labs.overthewire.org){:target=&quot;_blank&quot;} and log in with the password we just found. 

This time they disabled right clicking but we can still go to the Developer Tools on your web browser. 
On Chrome, go to `View / Developer / View Source`. On Firefox, it's `Tools / Web Developer / Page Source`.

That's it for level 1, **keep hacking and have a great day !**

{% highlight c linenos%}

{% endhighlight  %}</content><author><name></name></author><summary type="html">Continuing OverTheWire Natas wargame.</summary></entry><entry><title type="html">OverTheWire: Natas - Level 0 to 1</title><link href="https://mabocode.github.io/posts/overthewire/natas/otw-natas-0" rel="alternate" type="text/html" title="OverTheWire: Natas - Level 0 to 1" /><published>2019-07-01T08:31:56+02:00</published><updated>2019-07-01T08:31:56+02:00</updated><id>https://mabocode.github.io/posts/overthewire/natas/otw-natas-0</id><content type="html" xml:base="https://mabocode.github.io/posts/overthewire/natas/otw-natas-0">Good morning everyone !&lt;br&gt;
This is my first post and I'm really happy to get started. &lt;!--more--&gt;

Today I'm going to progress in [OverTheWire Natas](http://overthewire.org/wargames/natas/){:target=&quot;_blank&quot;} wargame which teaches us the basics of serverside web-security.
To get started, just visit [natas0.natas.labs.overthewire.org](http://natas0.natas.labs.overthewire.org){:target=&quot;_blank&quot;}. The username and password for level 0 are natas0.

The goal of this wargame is to retrieve the password for the next level by exploring the site, finding vulnerabilities and exploiting them.

This first level is quite easy since we just have to view the source code to get the password.

So that's it for level 0, **keep hacking and have a great day !**

{% highlight c linenos%}

{% endhighlight  %}</content><author><name></name></author><summary type="html">Good morning everyone ! This is my first post and I’m really happy to get started.</summary></entry></feed>